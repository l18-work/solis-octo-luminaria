augroup filetypedetect
  au BufNewFile,BufRead Zuo	setf make
augroup END

au BufWinLeave *.* mkview
au BufWinEnter *.* silent loadview
:syntax enable
:set autoindent
:set smartindent
:set tabstop=2
:set expandtab
:set smarttab
:set shiftwidth=2
:set encoding=utf-8
:let QA_make_target="undefined"

:retab

" E124 E125 E853 E884
fun! QA_make(...)
	:wa
	:let l:count = len(a:000)
	:if l:count == 0
	:	if g:QA_make_target != "undefined"
	:		let s =g:QA_make_target
	:		exe "!make ".s
	:	else
	:   let path =getcwd()
	:		exe "!make $(python3 -c \"from my.vimrc import get; get('".path."')\")"
	:	endif
	:else
	:	let s =join(a:000, " ")
	:	let g:QA_make_target=s
	: let path =getcwd()
	:		exe "!python3 -c \"from my.vimrc import put; put('".path."', '".s."')\" && make ".s
	endif
endfun
:com! -nargs=* ZQAmake call QA_make(<f-args>)
:map zq :call QA_make()<CR>

fun! QA_runBuffer(...)
	":mark s
	":%s/\t/  /ge
	":`s
	:retab
	:wa
	":!chmod +x %<CR>
	:let l:count = len(a:000)
	:let pipe =""
	:let e =expand("%:e")
	:if e == "vim" 
	":	source %
	":	return
	:	let p =expand("%:p")
	:	let p ="vim -s ".p
	:elseif e == "cc" || e == "c"
	:	let p =expand("%:p:r")
	:	let p ="make ".p." && ".p
	:else
	:	let p =expand("%:p")
	:endif
	:if l:count == 0
	:	exe "!".p." $(cat ~/.vim/run/qa_run-args)"
	:	return
	:elseif l:count > 0 && a:1 == "debug"
	:	let s =join(a:000[1:-1], " ")
	:	if e == "py"
	:		let p ="python3 -m pdb ".p
	:	elseif e == "js"
	:		let p ="node inspect ".p
	":	else 
	:	endif
	:elseif l:count > 0 && a:1 == "less"
	:	let s =join(a:000[1:-1], " ")
	:	let pipe =" | less"
	:else
	:	let s =join(a:000, " ")
	:endif
	:exe "!echo ".s." > ~/.vim/run/qa_run-args && ".p." ".s.pipe
endfun
:com! -nargs=* ZRunBufferQA call QA_runBuffer(<f-args>)
:map zr :call QA_runBuffer()<CR>
:map zd :call QA_runBuffer("debug")<CR>
:map zl :call QA_runBuffer("less")<CR>

:map zt :mark s<CR>:%s/\t/  /ge<CR>:'s<CR>:<CR>


